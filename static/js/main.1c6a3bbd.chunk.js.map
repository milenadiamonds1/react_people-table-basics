{"version":3,"sources":["components/HomePage.tsx","components/NavBar.tsx","components/PageNotFound.tsx","components/PersonLink.tsx","components/UserList.tsx","api.ts","components/Loader/Loader.tsx","Errors.ts","components/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","NavBar","role","to","isActive","classNames","PageNotFound","PersonLink","person","name","slug","sex","findParent","array","parentName","find","parent","UserList","users","personId","map","user","mother","motherName","father","fatherName","born","died","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","ErrorType","PeoplePage","useState","isLoading","setIsLoading","setUsers","errorMessage","setErrorMessage","useParams","usersFromServer","useEffect","getUsersFromServer","UnableToLoad","length","NoUsers","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.1c6a3bbd.chunk.js","sourcesContent":["export const HomePage = () => {\n  return (\n    <h1 className=\"title\">\n      Home Page\n    </h1>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport const NavBar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => classNames('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n          >\n            Home\n          </NavLink>\n          <NavLink\n            to=\"people\"\n            className={({ isActive }) => classNames('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const PageNotFound = () => {\n  return (\n    <h1 className=\"title\">\n      Page not found\n    </h1>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink:React.FC<Props> = ({ person }) => {\n  const { name, slug, sex } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames({ 'has-text-danger': sex === 'f' })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  users: Person[];\n  personId: string;\n};\n\nconst findParent = (\n  array: Person[],\n  parentName: string | null,\n): Person | null => {\n  return array.find((parent) => parent.name === parentName) || null;\n};\n\nexport const UserList: React.FC<Props> = ({ users, personId }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {users.map((user) => {\n          const mother = findParent(users, user.motherName);\n          const father = findParent(users, user.fatherName);\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={user.slug}\n              className={classNames({\n                'has-background-warning': user.slug === personId,\n              })}\n            >\n              <td>\n                <PersonLink person={user} />\n              </td>\n              <td>{user.sex}</td>\n              <td>{user.born}</td>\n              <td>{user.died}</td>\n              <td>\n                {mother\n                  ? <PersonLink person={mother} />\n                  : user.motherName || '-'}\n              </td>\n              <td>\n                {father\n                  ? <PersonLink person={father} />\n                  : user.fatherName || '-'}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","export enum ErrorType {\n  UnableToLoad = 'Something went wrong',\n  NoUsers = 'There are no people on the server',\n}\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { UserList } from './UserList';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { Loader } from './Loader';\nimport { ErrorType } from '../Errors';\n\nexport const PeoplePage = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [users, setUsers] = useState<Person[]>([]);\n  const [errorMessage, setErrorMessage] = useState(false);\n\n  const { slug = '' } = useParams();\n\n  async function getUsersFromServer() {\n    setIsLoading(true);\n    try {\n      const usersFromServer = await getPeople();\n\n      setUsers(usersFromServer);\n    } catch (error) {\n      setErrorMessage(true);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    setErrorMessage(false);\n    getUsersFromServer();\n    setTimeout(() => setErrorMessage(false), 3000);\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading ? (\n            <Loader />\n          ) : (\n            <>\n              {errorMessage && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  {ErrorType.UnableToLoad}\n                </p>\n              )}\n\n              {users.length <= 0 && (\n                <p data-cy=\"noPeopleMessage\">{ErrorType.NoUsers}</p>\n              )}\n\n              <UserList users={users} personId={slug} />\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Route, Routes, Navigate } from 'react-router-dom';\n\nimport './App.scss';\nimport { HomePage } from './components/HomePage';\nimport { NavBar } from './components/NavBar';\nimport { PageNotFound } from './components/PageNotFound';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <NavBar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n            <Route path=\"*\" element={<PageNotFound />} />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}